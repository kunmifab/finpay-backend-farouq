// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(uuid()) @db.Char(36)
  email               String   @unique @db.VarChar(191)
  password            String   @db.VarChar(191)
  name                String?  @db.VarChar(191)
  phoneNumber         String?   @db.VarChar(30)
  accountType         String?  @default("Freelancer") @db.VarChar(191)
  countryCode         String?  @db.VarChar(191)
  state               String?  @db.VarChar(191)
  address             String?  @db.VarChar(191)
  country             String?  @db.VarChar(191)
  verify_email_code   Int?  
  verify_email        Int      @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  balances Balance[]
}

model Balance {
  id        String @id @default(cuid())
  amount    Float  @default(0.00) @db.Float
  currency  String @db.VarChar(10) // E.g., "USD", "EUR", "NGN"
  userId    String
  user      User   @relation(fields: [userId], references: [id])

  // This ensures a user can only have one balance per currency
  @@unique([userId, currency])
}

model ExchangeRate {
  id          String   @id @default(uuid()) @db.Char(36)
  base        String   @unique @db.Char(3)
  gbp         Decimal? @db.Decimal(20,10)
  eur         Decimal? @db.Decimal(20,10)
  ngn         Decimal? @db.Decimal(20,10)
  cad         Decimal? @db.Decimal(20,10)
  effectiveAt DateTime
  provider    String?  @db.VarChar(50)
  createdAt   DateTime @default(now())
}